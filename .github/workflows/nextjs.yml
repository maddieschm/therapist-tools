# .github/workflows/deploy.yml
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"] # Trigger when changes are pushed to your 'main' branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write # Required for actions/deploy-pages

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Detect package manager needs adjustment to look in the subdirectory
      - name: Detect package manager
        id: detect-package-manager
        run: |
          # Check for yarn.lock or package.json within the 'my-therapist-app' directory
          if [ -f "${{ github.workspace }}/my-therapist-app/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT # Changed to install for consistency
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/my-therapist-app/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT # Changed to install for consistency
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager in my-therapist-app"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          # Cache path needs to reflect subdirectory:
          cache-dependency-path: my-therapist-app/${{ steps.detect-package-manager.outputs.manager }}.lock # Adjust cache path

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            my-therapist-app/.next/cache # Adjust cache path to subdirectory
          # Generate a new cache whenever packages or source files change.
          # Hash files need to look inside the subdirectory
          key: ${{ runner.os }}-nextjs-${{ hashFiles('my-therapist-app/**/package-lock.json', 'my-therapist-app/**/yarn.lock') }}-${{ hashFiles('my-therapist-app/**/*.js', 'my-therapist-app/**/*.jsx', 'my-therapist-app/**/*.ts', 'my-therapist-app/**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('my-therapist-app/**/package-lock.json', 'my-therapist-app/**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          cd my-therapist-app # Navigate into the subdirectory
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: |
          cd my-therapist-app # Navigate into the subdirectory
          ${{ steps.detect-package-manager.outputs.runner }} next build

      # Add step to create CNAME file in the output directory
      - name: Create CNAME file for custom domain
        run: echo "therapist-tools.mhcdt.com" > ./my-therapist-app/out/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./my-therapist-app/out # Path to the build output directory

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # This action handles the final deployment to GitHub Pages
